<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-04-06T16:32:30+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Ash Blog</title><subtitle>이것저것 기록 일지.</subtitle><author><name>Ashley</name></author><entry><title type="html">스택(Stack)의 구조</title><link href="http://localhost:4000/algorithm/algorithm_stack/" rel="alternate" type="text/html" title="스택(Stack)의 구조" /><published>2022-04-06T00:00:00+09:00</published><updated>2022-04-06T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/algorithm_stack</id><content type="html" xml:base="http://localhost:4000/algorithm/algorithm_stack/"><![CDATA[<h3>스택(Stack)</h3>

<p>스택은 LIFO(Last In, First Out) 또는 FILO(First In, Last Out) 데이터 관리 방식을 따름<br /><br /></p>

<ul>
  <li>LIFO : 마지막에 넣은 데이터를 가장 먼저 추출함</li>
  <li>FILO : 처음에 넣은 데이터를 가장 마지막에 추출함</li>
  <li>데이터를 스택에 넣는건 push() / 데이터를 스택에서 꺼내는건 pop()
<br /><br />
💡큐(Queue)가 FIFO 라면, 스택(Stack)은 LIFO
<br /><br /><br /><br />
🤩대표적인 장점</li>
  <li>구조의 단순화/ 데이터의 저장,읽기 속도 빠름<br />
<br />
😥대표적인 단점</li>
  <li>데이터 최대 개수를 미리 정해야 하고, 미리 정한만큼 쓰지 못하면 저장공간의 낭비 발생
<br /><br /><br /><br /><br />
push와 pop을 이용한 예제코드</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Stack</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test_stack</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Stack</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">stack</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Stack</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;();</span>

        <span class="n">stack</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span> <span class="c1">//1이 추가됨</span>
        <span class="n">stack</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span> <span class="c1">//2가 추가됨</span>
        <span class="n">stack</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span> <span class="c1">//3이 추가됨</span>

        <span class="n">stack</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span> <span class="c1">//3이 제거됨</span>
        <span class="n">stack</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span> <span class="c1">//2가 제거됨</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">stack</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<p><br /><br /><br /><br />
ArrayList를 이용해서 가변적으로 Stack(스택)에 데이터를 넣고 빼보자</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test_stack</span><span class="o">&lt;</span><span class="no">T</span><span class="o">&gt;</span> <span class="o">{</span>
   <span class="kd">private</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="no">T</span><span class="o">&gt;</span> <span class="n">stack</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="no">T</span><span class="o">&gt;();</span>

   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">push</span><span class="o">(</span><span class="no">T</span> <span class="n">i</span><span class="o">)</span> <span class="o">{</span> 
       <span class="n">stack</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span> <span class="c1">//add는 ArrayList의 객체</span>
   <span class="o">}</span>

   <span class="kd">public</span> <span class="no">T</span> <span class="nf">pop</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">if</span><span class="o">(</span><span class="n">stack</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
         <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
      <span class="o">}</span>
      <span class="c1">//stack의 사이즈를 알 수 없기때문에 size 메소드로 값을 구한 뒤 -1을 해주면 끝자리 값이 삭제됨</span>
      <span class="k">return</span> <span class="n">stack</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">stack</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>
   <span class="o">}</span>

   <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isEmpty</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">stack</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">();</span>
   <span class="o">}</span>

   <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
      <span class="n">Test_stack</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">ts</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Test_stack</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;();</span>
      <span class="n">ts</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span> <span class="c1">//1을 넣고</span>
      <span class="n">ts</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span> <span class="c1">//2를 넣고</span>
      <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ts</span><span class="o">.</span><span class="na">pop</span><span class="o">());</span> <span class="c1">//2가 출력되고 값이 빠짐</span>
      <span class="n">ts</span><span class="o">.</span><span class="na">push</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span> <span class="c1">//3을 넣고</span>
      <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ts</span><span class="o">.</span><span class="na">pop</span><span class="o">());</span> <span class="c1">//3이 출력되고 값이 빠짐</span>
      <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ts</span><span class="o">.</span><span class="na">pop</span><span class="o">());</span> <span class="c1">//남은 값은 1로, 1이 출력됨</span>
	<span class="c1">//2 3 1 순으로 출력된다.</span>
   <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>]]></content><author><name>Ashley</name></author><category term="Algorithm" /><category term="algorithm" /><summary type="html"><![CDATA[스택(Stack)]]></summary></entry><entry><title type="html">Notion 로그아웃(원격 로그아웃)</title><link href="http://localhost:4000/etc/notion_logout/" rel="alternate" type="text/html" title="Notion 로그아웃(원격 로그아웃)" /><published>2022-04-05T00:00:00+09:00</published><updated>2022-04-05T00:00:00+09:00</updated><id>http://localhost:4000/etc/notion_logout</id><content type="html" xml:base="http://localhost:4000/etc/notion_logout/"><![CDATA[<p>노션을 사용하다가 브라우저를 그대로 종료하면 로그아웃이 되지않는다.<br />
노션을 사용하면서 불편한 점 중 하나가 아닐까 싶다😥
<br /><br /></p>

<p>그러다 문득, 내가 로그인했던 모든 session들의 device에서 로그아웃 해주는 원격 로그아웃 기능이 있을 것 같아 문의해보았다.<br /></p>

<p><img src="/assets/images/notion_answer.png" width="300px" height="300px" title="노션 원격로그아웃 방법" alt="노션 원격로그아웃 방법" /> <br /></p>

<p>이전엔 없었던 기능이라 다들 고객센터에 문의했던거같은데 기능이 추가된건지 위와 같은 방법을 답변받았다.</p>

<p><br /><br /></p>

<p>1) 노션의 왼쪽 사이드바 상단에 있는 Settings&amp;Members를 클릭한다.<br /></p>
<p align="center"><img src="/assets/images/notion1.png" width="300px" height="300px" title="노션 원격로그아웃 방법_1" alt="노션 원격로그아웃 방법_1" /> 
<br /><br /><br /><br /><br /><br />
2) 왼쪽 사이드바의 맨 상단에 My account를 클릭<br />
<p align="center"><img src="/assets/images/notion2.png" width="90%" height="90%" title="노션 원격로그아웃 방법_2" alt="노션 원격로그아웃 방법_2" /> 
<br /><br /><br /><br /><br /><br />
3) 별표 표시해놓은 부분에서 Logout 버튼을 클릭하면<br />현재 기기를 제외한 나머지 기기에서 로그아웃이 된다.<br />
<p align="center"><img src="/assets/images/notion3.png" width="90%" height="90%" title="노션 원격로그아웃 방법_3" alt="노션 원격로그아웃 방법_3" /> 
<br />
</p></p></p>]]></content><author><name>Ashley</name></author><category term="ETC" /><category term="etc" /><summary type="html"><![CDATA[노션을 사용하다가 브라우저를 그대로 종료하면 로그아웃이 되지않는다. 노션을 사용하면서 불편한 점 중 하나가 아닐까 싶다😥]]></summary></entry><entry><title type="html">List와 ArrayList의 차이</title><link href="http://localhost:4000/algorithm/algorithm_list_arraylist/" rel="alternate" type="text/html" title="List와 ArrayList의 차이" /><published>2022-04-04T00:00:00+09:00</published><updated>2022-04-04T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/algorithm_list_arraylist</id><content type="html" xml:base="http://localhost:4000/algorithm/algorithm_list_arraylist/"><![CDATA[<h3>List와 ArrayList의 차이</h3>

<p>List는 인터페이스고 ArrayList는 클래스이다.</p>

<ul>
  <li>클래스는 일반클래스와, abstract로 정의된 추상 클래스로 나뉨</li>
  <li>인터페이스는 모든 메서드가 추상 메서드인 경우를 의미 / 인터페이스를 상속받는 클래스는 인터페이스에서 정의된 추상 메서드를 모두 구현해야함
(따라서 다양한 클래스를 상속받는 특정 인터페이스는 결국 동일한 메서드를 제공함)</li>
</ul>

<p>하나의 예를 보자.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">list1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;();</span>  <span class="c1">// list1을 ArrayList객체로 만듦</span>
<span class="n">list1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;();</span> <span class="c1">// 그리고 이렇게 LinkedList 객체로도 대체가 가능함</span>
</code></pre></div></div>

<p>이유는 List<Integer>가 인터페이스인데, 이런 인터페이스의 추상메소드를 구현하는게 ArrayList, LinkedList 둘 다 가능하기 때문이다.</Integer></p>

<p><br /><br /></p>

<p>예제</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">list1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;();</span>
</code></pre></div></div>

<ul>
  <li>list1에 아이템 추가시에는 add를 사용 : list.add(1),list1.add(2);</li>
  <li>list1의 특정 아이템을 읽을시 get(인덱스번호)을 사용 : list1.get (0);
  ⇒ 1</li>
  <li>list1의 특정 인덱스에 해당하는 아이템 변경시 set을 사용 : list1.set(0,5);
  ⇒ 1이었던 값이 5로 바뀜</li>
  <li>list1의 특정 인덱스에 해당하는 아이템 삭제시 remove를 사용 : list1.remove(0);
  ⇒ 2(0번째의 인덱스값이 사라지고 1번째에 있던 값이 0의 자리로 옴)</li>
  <li>list1의 배열 길이 확인은 : list1.size();
  ⇒ 1</li>
</ul>

<p><br /><br /></p>

<p>3차원 배열 출력 연습</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
      <span class="nc">Integer</span> <span class="o">[][][]</span> <span class="n">data_list</span> <span class="o">=</span> <span class="o">{</span>
        <span class="o">{</span>
            <span class="o">{</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">},</span>
            <span class="o">{</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">,</span><span class="mi">6</span><span class="o">}</span>
        <span class="o">},</span>
        <span class="o">{</span>
            <span class="o">{</span><span class="mi">7</span><span class="o">,</span><span class="mi">8</span><span class="o">,</span><span class="mi">9</span><span class="o">},</span>
            <span class="o">{</span><span class="mi">10</span><span class="o">,</span><span class="mi">11</span><span class="o">,</span><span class="mi">12</span><span class="o">}</span>
        <span class="o">}</span>
      <span class="o">};</span>
      <span class="c1">//3차원 배열에서 8, 10, 2를 순서대로 출력해보기</span>
      <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">data_list</span><span class="o">[</span><span class="mi">1</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="mi">1</span><span class="o">]);</span>
      <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">data_list</span><span class="o">[</span><span class="mi">1</span><span class="o">][</span><span class="mi">1</span><span class="o">][</span><span class="mi">0</span><span class="o">]);</span>
      <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">data_list</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="mi">1</span><span class="o">]);</span>
    <span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<p><br /><br /></p>

<ul>
  <li>배열.length : 배열에 들어있는 아이템 개수</li>
  <li>문자열.indexOf(String key) : String key가 해당 문자열에 있으면 해당 문자의 위치(index값)를 리턴하고, 없으면 -1을 리턴함</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>

        <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="s">"HelloSpring"</span><span class="o">;</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="s">"S"</span><span class="o">));</span>
        <span class="c1">//"S"의 index 위치는 5번째이므로 값은 5가 된다.</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>]]></content><author><name>Ashley</name></author><category term="Algorithm" /><category term="algorithm" /><summary type="html"><![CDATA[List와 ArrayList의 차이]]></summary></entry><entry><title type="html">큐(Queue)의 구조</title><link href="http://localhost:4000/algorithm/algorithm_queue/" rel="alternate" type="text/html" title="큐(Queue)의 구조" /><published>2022-04-04T00:00:00+09:00</published><updated>2022-04-04T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/algorithm_queue</id><content type="html" xml:base="http://localhost:4000/algorithm/algorithm_queue/"><![CDATA[<h3>큐 구조</h3>

<ul>
  <li>가장 먼저 넣은 데이터를 가장 먼저 꺼낼 수 있는 구조</li>
  <li>FIFO(First in First out) / LILO(Last in Last out)방식으로 이루어짐</li>
  <li>큐에는 Enqueue(add(value), offer(value))와 Dequeue(poll(), remove()) 종류가 있음</li>
</ul>

<p>Queue를 사용하기 위해서는 LinkedList 클래스를 사용해야하고,<br />
어떤 데이터타입을 사용할건지 자료형 매개변수를 넣어서 지정해줘야함</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Queue</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test_queue</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>

        <span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">q_int</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;();</span>
        <span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">q_str</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<p><br /><br />
💡Enqueue와 Dequeue</p>

<ul>
  <li>
    <dl>
      <dt>큐에 데이터를 추가하기 위해서는 add(value) , offer(value)를 사용<br /></dt>
      <dd>q_int.add(1),q_int.offer(2);</dd>
    </dl>
  </li>
  <li>
    <dl>
      <dt>큐에 들어있는 데이터를 출력할 때는 해당 인스턴스를 사용<br /></dt>
      <dd><code class="language-plaintext highlighter-rouge">System.out.println(q_int);</code> ⇒ [1, 2]<br /></dd>
    </dl>
  </li>
  <li>
    <dl>
      <dt>큐에 들어있는 첫 번째 값을 반환하고, 해당 첫 번째 값을 삭제할때는 poll이나 remove를 사용<br /></dt>
      <dd>q_int.poll(); , q_int_remove() <br />
  ⇒ 큐에 들어있는 첫 번째 값은 1이므로 1이 삭제되고 2만 남는다.</dd>
    </dl>
  </li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Queue</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test_queue</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>

        <span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">q_int</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;();</span>
        <span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">q_str</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;();</span>

        <span class="n">q_int</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
        <span class="n">q_int</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>

        <span class="n">q_str</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"m"</span><span class="o">);</span>
        <span class="n">q_str</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="s">"om"</span><span class="o">);</span>
        <span class="n">q_str</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">q_int</span><span class="o">);</span> <span class="c1">// 1,2가 출력됨</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">q_str</span><span class="o">);</span> <span class="c1">// "m"이 제거되어 "om"만 출력됨</span>
    <span class="o">}</span>

<span class="o">}</span>

</code></pre></div></div>
<p><br /><br /><br />
📝Enqueue와 Dequeue를 사용해보자</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test_queue</span><span class="o">&lt;</span><span class="no">T</span><span class="o">&gt;</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="no">T</span><span class="o">&gt;</span> <span class="n">queue</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="no">T</span><span class="o">&gt;();</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">enqueue</span><span class="o">(</span><span class="no">T</span> <span class="n">i</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">queue</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="c1">//데이터를 꺼내오는거라 별도의 인자가 없음</span>
    <span class="kd">public</span> <span class="no">T</span> <span class="nf">dequeue</span><span class="o">()</span> <span class="o">{</span> 
        <span class="k">if</span> <span class="o">(</span><span class="n">queue</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
            <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">queue</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="c1">//Test_queue 클래스가 데이터를 갖고있는지 여부를 확인하기 위한 메소드</span>
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isEmpty</span><span class="o">()</span> <span class="o">{</span> 
        <span class="k">return</span> <span class="n">queue</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Test_queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">tq</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Test_queue</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;();</span>
        <span class="n">tq</span><span class="o">.</span><span class="na">enqueue</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>  <span class="c1">//1을 넣고</span>
        <span class="n">tq</span><span class="o">.</span><span class="na">enqueue</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>  <span class="c1">//2를 넣고</span>
        <span class="n">tq</span><span class="o">.</span><span class="na">enqueue</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>  <span class="c1">//3을 넣었다</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">tq</span><span class="o">.</span><span class="na">dequeue</span><span class="o">());</span> <span class="c1">//1을 빼고</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">tq</span><span class="o">.</span><span class="na">dequeue</span><span class="o">());</span> <span class="c1">//2를 빼고</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">tq</span><span class="o">.</span><span class="na">dequeue</span><span class="o">());</span> <span class="c1">//3을 뺌</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<p>값은 순서대로 1 2 3 이 출력된다.</p>]]></content><author><name>Ashley</name></author><category term="Algorithm" /><category term="algorithm" /><summary type="html"><![CDATA[큐 구조]]></summary></entry><entry><title type="html">MySQL에서 LIKE IN 대신 사용가능한 REGEXP</title><link href="http://localhost:4000/mysql/mysqluse_1/" rel="alternate" type="text/html" title="MySQL에서 LIKE IN 대신 사용가능한 REGEXP" /><published>2022-03-16T00:00:00+09:00</published><updated>2022-03-16T00:00:00+09:00</updated><id>http://localhost:4000/mysql/mysqluse_1</id><content type="html" xml:base="http://localhost:4000/mysql/mysqluse_1/"><![CDATA[<p>한 컬럼에 여러 값이 저장되있는 경우, LIKE를 이용해서 여러 조건을 검색하고 싶었다.<br />
LIKE와 IN을 함께 쓸 수 있나 찾아봤지만 MySQL에서는 불가능했고😥 
대체 방안으로 <strong>REGEXP</strong>를 찾아냈다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span>
       <span class="n">a</span><span class="p">.</span><span class="n">certificate</span> <span class="k">AS</span> <span class="s1">'관심자격증'</span>
    <span class="k">FROM</span>
         <span class="s1">'테이블명'</span> <span class="k">AS</span> <span class="n">a</span>
    <span class="k">WHERE</span>
        <span class="n">a</span><span class="p">.</span><span class="n">certificate</span> <span class="n">REGEXP</span> <span class="s1">'part2_no57_lecture|part2_no2_lecture'</span>
    <span class="k">ORDER</span> <span class="k">BY</span>
        <span class="n">regdate</span> <span class="k">DESC</span><span class="p">;</span>
</code></pre></div></div>

<figure style="display:block; text-align:center;">
    <img src="/assets/images/mysqluse_1.png" width="90%" height="90%" title="쿼리 결과값" alt="쿼리 결과값" /> 
    <figcaption style="text-align:center; font-size:15px; color:#808080">
        (기존 데이터들이 json 식으로 저장 되있다..왜 이렇게 저장했을까..아주 엉망진창🤬)<br />
        위에 쿼리문처럼 입력하면 'part2_no57_lecture' 와 'part2_no2_lecture'가 해당되있는<br />
        결과값이 조회되는걸 확인할 수 있다.<br />
        LIKE로만 조건을 검색했더라면 굉장히 길고 효율성없는 쿼리문을 짤 수 밖에없었는데,<br />
        REGEXP가 날 살렸다!
    </figcaption>
</figure>]]></content><author><name>Ashley</name></author><category term="MySQL" /><category term="mysql" /><summary type="html"><![CDATA[한 컬럼에 여러 값이 저장되있는 경우, LIKE를 이용해서 여러 조건을 검색하고 싶었다. LIKE와 IN을 함께 쓸 수 있나 찾아봤지만 MySQL에서는 불가능했고😥 대체 방안으로 REGEXP를 찾아냈다.]]></summary></entry><entry><title type="html">There are no gemspecs at 오류 발생시 해결방안</title><link href="http://localhost:4000/etc/bundlererror/" rel="alternate" type="text/html" title="There are no gemspecs at 오류 발생시 해결방안" /><published>2022-03-11T00:00:00+09:00</published><updated>2022-03-11T00:00:00+09:00</updated><id>http://localhost:4000/etc/bundlererror</id><content type="html" xml:base="http://localhost:4000/etc/bundlererror/"><![CDATA[<p>깃허브 블로그를 local에서 실행하려고 해당 명령어를 입력한 순간,</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle <span class="nb">exec </span>jekyll serve 
</code></pre></div></div>
<p><br /><br /></p>

<p>아래와 같은 에러가 발생했다.</p>

<figure style="display:block; text-align:center;">
    <img src="/assets/images/bundler_error.png" width="90%" height="90%" title="bundler실행시 에러" alt="bundler실행시 에러나는 화면" /> 
        <figcaption style="text-align:center; font-size:15px; color:#f00">
            [!] There was an error parsing `Gemfile`: There are no gemspecs at /home/ashley/seolhee-choi.github.io. Bundler cannot continue.
        </figcaption><br />
    <img src="/assets/images/gemfile.png" width="90%" height="10%" title="gemfile선택" alt="Gemfile선택" /> 
        <figcaption style="text-align:center; font-size:15px; color:#000">
            사진에 있는 Gemfile을 눌러서 들어간뒤
        </figcaption><br />
    <img src="/assets/images/gemfile2.png" width="90%" height="90%" title="gemfile내용 수정1" alt="gemfile내용 수정1" /> 
        <figcaption style="text-align:center; font-size:15px; color:#000">
            #gemspec 하단에 아래 3줄을 추가했다.
        </figcaption><br />
    <img src="/assets/images/gemfile3.png" width="90%" height="90%" title="gemfile내용 수정2" alt="gemfile내용 수정2" /> <br /><br />
    <img src="/assets/images/bundler_success.png" width="90%" height="90%" title="bundler성공시 화면" alt="bundler성공시 화면" /> 
        <figcaption style="text-align:center; font-size:15px; color:#000">
            다시 'bundle exec jekyll serve' 명령어 입력해보면 정상으로 작동되는 것이 확인됨     
        </figcaption>
</figure>]]></content><author><name>Ashley</name></author><category term="ETC" /><category term="etc" /><summary type="html"><![CDATA[깃허브 블로그를 local에서 실행하려고 해당 명령어를 입력한 순간,]]></summary></entry><entry><title type="html">Ubuntu폴더 윈도우(windows)에서 열기</title><link href="http://localhost:4000/ubuntu/ubuntuopen/" rel="alternate" type="text/html" title="Ubuntu폴더 윈도우(windows)에서 열기" /><published>2022-03-10T00:00:00+09:00</published><updated>2022-03-10T00:00:00+09:00</updated><id>http://localhost:4000/ubuntu/ubuntuopen</id><content type="html" xml:base="http://localhost:4000/ubuntu/ubuntuopen/"><![CDATA[<p>windows를 사용하면서 wsl을 설치해 ubuntu를 사용하는 사람이라면
윈도우에서 ubuntu 폴더를 열어보고 싶은 경우가 있다.
그럴 때 간단하게 사용하는 명령어는</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>explorer.exe <span class="nb">.</span>
</code></pre></div></div>
<figure style="display:block; text-align:center;">
    <img src="/assets/images/ubuntu_1.png" width="90%" height="90%" title="ubuntu 명령어 입력" alt="ubuntu 명령어를 입력하는 화면" /> 
    <figcaption style="text-align:center; font-size:15px; color:#808080">
        이렇게 명령어를 입력하면
    </figcaption>
    <img src="/assets/images/ubuntu_open.png" width="90%" height="90%" title="ubuntu 명령어 실행" alt="ubuntu 명령어 입력시 실행되는 화면" /> 
    <figcaption style="text-align:center; font-size:15px; color:#808080">
        윈도우에서 해당 폴더가 있는 창이 열린다.
    </figcaption>
</figure>]]></content><author><name>Ashley</name></author><category term="Ubuntu" /><category term="ubuntu" /><summary type="html"><![CDATA[windows를 사용하면서 wsl을 설치해 ubuntu를 사용하는 사람이라면 윈도우에서 ubuntu 폴더를 열어보고 싶은 경우가 있다. 그럴 때 간단하게 사용하는 명령어는]]></summary></entry><entry><title type="html">Couponsend</title><link href="http://localhost:4000/couponsend/" rel="alternate" type="text/html" title="Couponsend" /><published>2022-03-08T00:00:00+09:00</published><updated>2022-03-08T00:00:00+09:00</updated><id>http://localhost:4000/couponsend</id><content type="html" xml:base="http://localhost:4000/couponsend/"><![CDATA[<h5 id="매일-수강인증한-회원에-한해-특정-쿠폰이-발급되어야-한다는-내용의-요청을-받았다">매일 수강인증한 회원에 한해 특정 쿠폰이 발급되어야 한다는 내용의 요청을 받았다.</h5>
<h5 id="운영팀에서-인증한-회원의-id를-게시판에-등록하면-나는-해당-게시글의-idx값만-확인한-후-수동으로-호출해주면-되게끔-하였다">운영팀에서 인증한 회원의 ID를 게시판에 등록하면, 나는 해당 게시글의 idx값만 확인한 후 수동으로 호출해주면 되게끔 하였다.</h5>
<h5 id="추가기능카카오-알림톡---현재-회사에서는-별도로-사용하는-api가-있음--쿠폰-발급-로그">추가기능(카카오 알림톡 - 현재 회사에서는 별도로 사용하는 api가 있음) + 쿠폰 발급 로그</h5>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">@</span><span class="nb">session_start</span><span class="p">();</span>

<span class="nf">MySQLConnectDB</span><span class="p">();</span>

<span class="nv">$send_cupon</span> <span class="o">=</span> <span class="s2">"Y"</span><span class="p">;</span> <span class="c1">//쿠폰발급여부</span>
<span class="nv">$event_idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">//event_idx 현재 없음</span>
<span class="nv">$send_sms</span> <span class="o">=</span> <span class="s2">"N"</span><span class="p">;</span> <span class="c1">//sms 발송 여부</span>
<span class="nv">$event_date</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s2">"Y-m-d"</span><span class="p">);</span> <span class="c1">//이벤트확인날짜 오늘</span>

<span class="nv">$cuponname</span> <span class="o">=</span> <span class="s2">"수강인증 할인쿠폰"</span><span class="p">;</span> <span class="c1">//쿠폰이름</span>
<span class="nv">$persent</span> <span class="o">=</span> <span class="mi">50</span><span class="p">;</span> <span class="c1">//할인율</span>
<span class="nv">$startdate</span> <span class="o">=</span> <span class="nv">$event_date</span><span class="p">;</span> <span class="c1">//시작일</span>
<span class="nv">$timestamp</span> <span class="o">=</span> <span class="nb">strtotime</span><span class="p">(</span><span class="s2">"+7 days"</span><span class="p">);</span> <span class="c1">//쿠폰유효기간</span>
<span class="nv">$enddate</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s2">"Y-m-d"</span><span class="p">,</span> <span class="nv">$timestamp</span><span class="p">);</span> <span class="c1">//쿠폰사용 종료일</span>
<span class="nv">$cupon_state</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">//쿠폰사용여부 0-사용안함, 1-사용함</span>
<span class="nv">$cuponNO</span><span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

<span class="nv">$condition_value</span> <span class="o">=</span> <span class="s2">"조건 없음"</span><span class="p">;</span>

<span class="nv">$idx</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s1">'idx'</span><span class="p">];</span>
<span class="c1">//$idx = 7;</span>

<span class="nv">$event_type</span> <span class="o">=</span> <span class="s2">"0124_event_promotion"</span><span class="p">;</span>
<span class="nv">$today</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s2">"Ymd"</span><span class="p">);</span>

<span class="nv">$promotion_select_sql</span> <span class="o">=</span> <span class="s2">"SELECT context FROM 2022_event_promotion WHERE idx="</span><span class="mf">.</span><span class="nv">$idx</span><span class="p">;</span>
<span class="nv">$promotion_select_res</span> <span class="o">=</span> <span class="nf">MySQLQuery</span><span class="p">(</span><span class="nv">$promotion_select_sql</span><span class="p">);</span>
<span class="nv">$promotion_select_list</span> <span class="o">=</span> <span class="nf">MySQLFetchArray</span><span class="p">(</span><span class="nv">$promotion_select_res</span><span class="p">);</span>

<span class="nv">$useridarray</span> <span class="o">=</span> <span class="nv">$promotion_select_list</span><span class="p">[</span><span class="s1">'context'</span><span class="p">];</span>
<span class="nv">$useridarray</span> <span class="o">=</span> <span class="nb">explode</span><span class="p">(</span><span class="s2">","</span><span class="p">,</span><span class="nv">$useridarray</span><span class="p">);</span>

<span class="k">for</span><span class="p">(</span><span class="nv">$i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="nv">$i</span><span class="o">&lt;</span><span class="nb">count</span><span class="p">(</span><span class="nv">$useridarray</span><span class="p">);</span> <span class="nv">$i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="nv">$userid</span> <span class="o">=</span> <span class="nb">trim</span><span class="p">(</span><span class="nv">$useridarray</span><span class="p">[</span><span class="nv">$i</span><span class="p">]);</span>
    <span class="c1">//중복발급 확인</span>
    <span class="nv">$dup_sql</span> <span class="o">=</span> <span class="s2">"SELECT count(*) as cnt from 2022_condition_coupon_log"</span><span class="p">;</span>
    <span class="nv">$dup_sql</span> <span class="mf">.</span><span class="o">=</span> <span class="s2">" WHERE send_cupon= 'Y' AND event_type='</span><span class="nv">$event_type</span><span class="s2">' and userid='</span><span class="nv">$userid</span><span class="s2">'"</span><span class="p">;</span>
    <span class="nv">$dup_res</span> <span class="o">=</span> <span class="nf">MySQLQuery</span><span class="p">(</span><span class="nv">$dup_sql</span><span class="p">);</span>
    <span class="nv">$dup_list</span> <span class="o">=</span> <span class="nf">MySQLFetchArray</span><span class="p">(</span><span class="nv">$dup_res</span><span class="p">);</span>

    <span class="k">if</span> <span class="p">(</span><span class="nv">$dup_list</span><span class="p">[</span><span class="s1">'cnt'</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="c1">//중복발급인 경우</span>
    <span class="p">{</span>
        <span class="nv">$msg</span> <span class="o">=</span> <span class="s2">"중복 발급입니다. ID:"</span> <span class="mf">.</span> <span class="nv">$userid</span> <span class="mf">.</span> <span class="s2">"&lt;br&gt;"</span><span class="p">;;</span>
        <span class="nv">$send_cupon</span> <span class="o">=</span> <span class="s2">"N"</span><span class="p">;</span>
        <span class="nv">$send_sms</span> <span class="o">=</span> <span class="s2">"N"</span><span class="p">;</span>
        <span class="k">echo</span> <span class="nv">$msg</span><span class="p">;</span>
        <span class="nv">$msg</span> <span class="o">=</span> <span class="nb">iconv</span><span class="p">(</span><span class="s2">"EUC-KR"</span><span class="p">,</span> <span class="s2">"UTF-8"</span><span class="p">,</span> <span class="nv">$msg</span><span class="p">);</span>
        <span class="nf">insert_condition_log</span><span class="p">(</span><span class="nv">$userid</span><span class="p">,</span> <span class="nv">$event_idx</span><span class="p">,</span> <span class="nv">$event_type</span><span class="p">,</span> <span class="nv">$condition_value</span><span class="p">,</span> <span class="nv">$send_cupon</span><span class="p">,</span> <span class="nv">$cuponNO</span><span class="p">,</span> <span class="nv">$send_sms</span><span class="p">,</span> <span class="nv">$event_date</span><span class="p">,</span> <span class="nv">$msg</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nv">$cuponNO</span> <span class="o">=</span> <span class="nf">cuponNO</span><span class="p">();</span>

        <span class="c1">//조건없음</span>
        <span class="nv">$send_cupon</span> <span class="o">=</span> <span class="s2">"Y"</span><span class="p">;</span>
        <span class="nv">$condition_value</span> <span class="o">=</span> <span class="s2">"조건없음"</span><span class="p">;</span>

        <span class="c1">//쿠폰의 사용 여부 확인 ( 사용했으면 1, 사용하지 않았으면 0)</span>
        <span class="nv">$cupon_insert_sql</span> <span class="o">=</span> <span class="s2">"insert into my_cupon (userid,cuponname,couponNO,persent,startdate,enddate,cupon_state) "</span><span class="p">;</span>
        <span class="nv">$cupon_insert_sql</span> <span class="mf">.</span><span class="o">=</span> <span class="s2">"values ('</span><span class="nv">$userid</span><span class="s2">','</span><span class="nv">$cuponname</span><span class="s2">','</span><span class="nv">$cuponNO</span><span class="s2">.',</span><span class="nv">$persent</span><span class="s2">, '</span><span class="nv">$startdate</span><span class="s2">', '</span><span class="nv">$enddate</span><span class="s2">', '</span><span class="nv">$cupon_state</span><span class="s2">')"</span><span class="p">;</span>
        <span class="nv">$copon_insert_result</span> <span class="o">=</span> <span class="nf">MySQLQuery</span><span class="p">(</span><span class="nv">$cupon_insert_sql</span><span class="p">);</span>

        <span class="nv">$msg</span> <span class="o">=</span> <span class="s2">"쿠폰이 발급되었습니다. : "</span><span class="mf">.</span> <span class="nv">$userid</span><span class="mf">.</span> <span class="s2">"&lt;br&gt;"</span><span class="p">;</span>
        <span class="k">echo</span> <span class="nv">$msg</span><span class="p">;</span>
        <span class="nv">$msg</span> <span class="o">=</span> <span class="nb">iconv</span><span class="p">(</span><span class="s2">"EUC-KR"</span><span class="p">,</span> <span class="s2">"UTF-8"</span><span class="p">,</span> <span class="nv">$msg</span><span class="p">);</span>


        <span class="nv">$member_select_sql</span> <span class="o">=</span> <span class="s2">"SELECT * FROM tbl_member WHERE user_id='</span><span class="nv">$userid</span><span class="s2">'"</span><span class="p">;</span>
        <span class="nv">$member_select_res</span> <span class="o">=</span> <span class="nf">MySQLQuery</span><span class="p">(</span><span class="nv">$member_select_sql</span><span class="p">);</span>
            <span class="k">while</span> <span class="p">(</span><span class="nv">$member_select_list</span> <span class="o">=</span> <span class="nf">MySQLFetchArray</span><span class="p">(</span><span class="nv">$member_select_res</span><span class="p">))</span> <span class="p">{</span>
                <span class="nv">$sendanswer</span> <span class="o">=</span> <span class="nv">$member_select_list</span><span class="p">[</span><span class="s1">'sendanswer'</span><span class="p">];</span>
                <span class="nv">$member_id</span> <span class="o">=</span> <span class="nv">$member_select_list</span><span class="p">[</span><span class="s1">'user_id'</span><span class="p">];</span>
                <span class="nv">$member_name</span> <span class="o">=</span> <span class="nv">$member_select_list</span><span class="p">[</span><span class="s1">'user_name'</span><span class="p">];</span>
                <span class="nv">$member_phone</span> <span class="o">=</span> <span class="nv">$member_select_list</span><span class="p">[</span><span class="s1">'home_phone'</span><span class="p">];</span><span class="c1">//휴대폰 번호</span>

                <span class="k">if</span><span class="p">(</span><span class="nv">$sendanswer</span> <span class="o">==</span> <span class="s2">"Y"</span> <span class="o">||</span> <span class="nv">$sendanswer</span> <span class="o">==</span> <span class="s2">"예"</span><span class="p">)</span> <span class="p">{</span>
                    <span class="nv">$send_sms</span> <span class="o">=</span> <span class="s2">"Y"</span><span class="p">;</span>

                    <span class="c1">//알림톡 전송</span>
                    <span class="nv">$post_data</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
                        <span class="s2">"id"</span> <span class="o">=&gt;</span> <span class="nb">iconv</span><span class="p">(</span><span class="s1">'EUC-KR'</span><span class="p">,</span> <span class="s1">'UTF-8'</span><span class="p">,</span> <span class="nv">$member_id</span><span class="p">),</span>
                        <span class="s2">"name"</span> <span class="o">=&gt;</span> <span class="nb">iconv</span><span class="p">(</span><span class="s1">'EUC-KR'</span><span class="p">,</span> <span class="s1">'UTF-8'</span><span class="p">,</span> <span class="nv">$member_name</span><span class="p">),</span>
                        <span class="s2">"hp_num"</span> <span class="o">=&gt;</span> <span class="nb">iconv</span><span class="p">(</span><span class="s1">'EUC-KR'</span><span class="p">,</span> <span class="s1">'UTF-8'</span><span class="p">,</span> <span class="nv">$member_phone</span><span class="p">),</span>
                    <span class="p">);</span>

                    <span class="nv">$ch</span> <span class="o">=</span> <span class="nb">curl_init</span><span class="p">();</span>
                    <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="no">CURLOPT_URL</span><span class="p">,</span> <span class="s2">"https://url"</span><span class="p">);</span><span class="c1">//해당 링크를 통해 카카오톡 발송 api를 사용</span>
                    <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="no">CURLOPT_POST</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
                   

                    <span class="c1">//SSL 필수 시작 - HTTPS일때 필수</span>
                    <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="no">CURLOPT_SSL_VERIFYPEER</span><span class="p">,</span> <span class="kc">FALSE</span><span class="p">);</span>
                    <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="no">CURLOPT_SSL_VERIFYHOST</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
                    <span class="c1">//SSL 필수 끝</span>
                    <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="no">CURLOPT_POSTFIELDS</span><span class="p">,</span> <span class="nv">$post_data</span><span class="p">);</span>
                    <span class="nv">$output</span> <span class="o">=</span> <span class="nb">curl_exec</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>

                    <span class="nv">$curl_errno</span> <span class="o">=</span> <span class="nb">curl_errno</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>
                    <span class="nv">$curl_error</span> <span class="o">=</span> <span class="nb">curl_error</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>

                    <span class="nv">$info</span> <span class="o">=</span> <span class="nb">curl_getinfo</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>

                    <span class="nb">curl_close</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>

                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                    <span class="nv">$send_sms</span> <span class="o">=</span> <span class="s2">"N"</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="c1">//로그 남기기</span>
            <span class="nf">insert_condition_log</span><span class="p">(</span><span class="nv">$userid</span><span class="p">,</span> <span class="nv">$event_idx</span><span class="p">,</span> <span class="nv">$event_type</span><span class="p">,</span> <span class="nv">$condition_value</span><span class="p">,</span> <span class="nv">$send_cupon</span><span class="p">,</span> <span class="nv">$cuponNO</span><span class="p">,</span> <span class="nv">$send_sms</span><span class="p">,</span> <span class="nv">$event_date</span><span class="p">,</span> <span class="nv">$msg</span><span class="p">);</span>

    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>밑에는 insert_condition_log 함수 내용(공통 파일에 넣어져있다)</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*
  ┌──────────────────────────────────────────────────────┐
  │▒ 함수명 : insert_condition_log()                    ▒│
  │▒ 설  명 : 조건 발급 쿠폰 로그                        ▒│
  │▒                                                    ▒│
  │▒ 입력값 : $userid : userid, $event_idx :이벤트 idx
  │▒ 입력값 : $event_type : 이벤트type, $condition_value :조건
  │▒ 입력값 : $send_cupon : 쿠폰발급여부, $cuponNO :쿠폰번호
  │▒ 입력값 : $send_sms : sms발신여부, $event_date : 이벤트시작일
  │▒ 입력값 : $message : 사용자 메시지
  │▒ 리턴값 : 없음                                      ▒│
  └──────────────────────────────────────────────────────┘*/</span>
<span class="k">function</span> <span class="n">insert_condition_log</span><span class="p">(</span><span class="nv">$userid</span><span class="p">,</span> <span class="nv">$event_idx</span><span class="p">,</span> <span class="nv">$event_type</span><span class="p">,</span> <span class="nv">$condition_value</span><span class="p">,</span> <span class="nv">$send_cupon</span><span class="p">,</span> <span class="nv">$cuponNO</span><span class="p">,</span> <span class="nv">$send_sms</span><span class="p">,</span> <span class="nv">$event_date</span><span class="p">,</span> <span class="nv">$message</span><span class="p">)</span>
<span class="p">{</span>
  <span class="c1">//id, event_idx(이벤트 idx)-지금은 없음, </span>
  <span class="c1">//event_type(이벤트타입)-지금은 0124_event 고정, </span>
  <span class="c1">//condition_value(조건:값) 내용-결제금액&gt;10만원:$결제금액</span>
  <span class="c1">//send_cupon(발급여부)-Y,N couponNO, </span>
  <span class="c1">//send_sms(sms 송신여부)-지금은N, </span>
  <span class="c1">//event_date(이벤트날짜,오늘), reg_date(등록일시) condition_coupon_log에 내용 저장</span>
	<span class="c1">//조건에 안맞아도 무조건 log에는 기입</span>
	<span class="nv">$message</span> <span class="o">=</span> <span class="nb">iconv</span><span class="p">(</span><span class="s2">"UTF-8"</span><span class="p">,</span> <span class="s2">"EUC-KR"</span><span class="p">,</span> <span class="nv">$message</span><span class="p">);</span>
	<span class="nv">$cupon_log_insert_sql</span> <span class="o">=</span> <span class="s2">" INSERT INTO 테이블명(userid, event_idx, event_type, condition_value, send_cupon, couponNO, send_sms, event_date, message, reg_date)"</span><span class="p">;</span>
	<span class="nv">$cupon_log_insert_sql</span> <span class="mf">.</span><span class="o">=</span> <span class="s2">" VALUES ('</span><span class="nv">$userid</span><span class="s2">','</span><span class="nv">$event_idx</span><span class="s2">','</span><span class="nv">$event_type</span><span class="s2">', '</span><span class="nv">$condition_value</span><span class="s2">', '</span><span class="nv">$send_cupon</span><span class="s2">', '</span><span class="nv">$cuponNO</span><span class="s2">','</span><span class="nv">$send_sms</span><span class="s2">', '</span><span class="nv">$event_date</span><span class="s2">', '</span><span class="nv">$message</span><span class="s2">', NOW())"</span><span class="p">;</span>
	<span class="nv">$cupon_log_result</span> <span class="o">=</span> <span class="nf">MySQLQuery</span><span class="p">(</span><span class="nv">$cupon_log_insert_sql</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h5 id="이렇게-소스코드로-짜여진-couponphp-파일을-도메인에-idx값과-함께-수동으로-입력하면">이렇게 소스코드로 짜여진 coupon.php 파일을 도메인에 idx값과 함께 수동으로 입력하면</h5>
<h5 id="해당하는-사람들에게-해당-쿠폰수강인증-할인쿠폰이-자동으로-발급되고-카카오-안내톡도-발송된다">해당하는 사람들에게 해당 쿠폰(수강인증 할인쿠폰)이 자동으로 발급되고 카카오 안내톡도 발송된다.</h5>
<h5 id="ex-httpswwwtestkrcouponphpidx7">EX) https://www.test.kr/coupon.php?idx=7</h5>]]></content><author><name>Ashley</name></author><summary type="html"><![CDATA[매일 수강인증한 회원에 한해 특정 쿠폰이 발급되어야 한다는 내용의 요청을 받았다. 운영팀에서 인증한 회원의 ID를 게시판에 등록하면, 나는 해당 게시글의 idx값만 확인한 후 수동으로 호출해주면 되게끔 하였다. 추가기능(카카오 알림톡 - 현재 회사에서는 별도로 사용하는 api가 있음) + 쿠폰 발급 로그 @session_start(); MySQLConnectDB(); $send_cupon = "Y"; //쿠폰발급여부 $event_idx = 0; //event_idx 현재 없음 $send_sms = "N"; //sms 발송 여부 $event_date = date("Y-m-d"); //이벤트확인날짜 오늘 $cuponname = "수강인증 할인쿠폰"; //쿠폰이름 $persent = 50; //할인율 $startdate = $event_date; //시작일 $timestamp = strtotime("+7 days"); //쿠폰유효기간 $enddate = date("Y-m-d", $timestamp); //쿠폰사용 종료일 $cupon_state = 0; //쿠폰사용여부 0-사용안함, 1-사용함 $cuponNO= 0; $condition_value = "조건 없음"; $idx = $_GET['idx']; //$idx = 7; $event_type = "0124_event_promotion"; $today = date("Ymd"); $promotion_select_sql = "SELECT context FROM 2022_event_promotion WHERE idx=".$idx; $promotion_select_res = MySQLQuery($promotion_select_sql); $promotion_select_list = MySQLFetchArray($promotion_select_res); $useridarray = $promotion_select_list['context']; $useridarray = explode(",",$useridarray); for($i=0; $i&lt;count($useridarray); $i++) { $userid = trim($useridarray[$i]); //중복발급 확인 $dup_sql = "SELECT count(*) as cnt from 2022_condition_coupon_log"; $dup_sql .= " WHERE send_cupon= 'Y' AND event_type='$event_type' and userid='$userid'"; $dup_res = MySQLQuery($dup_sql); $dup_list = MySQLFetchArray($dup_res); if ($dup_list['cnt'] &gt; 0) //중복발급인 경우 { $msg = "중복 발급입니다. ID:" . $userid . "&lt;br&gt;";; $send_cupon = "N"; $send_sms = "N"; echo $msg; $msg = iconv("EUC-KR", "UTF-8", $msg); insert_condition_log($userid, $event_idx, $event_type, $condition_value, $send_cupon, $cuponNO, $send_sms, $event_date, $msg); } else { $cuponNO = cuponNO(); //조건없음 $send_cupon = "Y"; $condition_value = "조건없음"; //쿠폰의 사용 여부 확인 ( 사용했으면 1, 사용하지 않았으면 0) $cupon_insert_sql = "insert into my_cupon (userid,cuponname,couponNO,persent,startdate,enddate,cupon_state) "; $cupon_insert_sql .= "values ('$userid','$cuponname','$cuponNO.',$persent, '$startdate', '$enddate', '$cupon_state')"; $copon_insert_result = MySQLQuery($cupon_insert_sql); $msg = "쿠폰이 발급되었습니다. : ". $userid. "&lt;br&gt;"; echo $msg; $msg = iconv("EUC-KR", "UTF-8", $msg); $member_select_sql = "SELECT * FROM tbl_member WHERE user_id='$userid'"; $member_select_res = MySQLQuery($member_select_sql); while ($member_select_list = MySQLFetchArray($member_select_res)) { $sendanswer = $member_select_list['sendanswer']; $member_id = $member_select_list['user_id']; $member_name = $member_select_list['user_name']; $member_phone = $member_select_list['home_phone'];//휴대폰 번호 if($sendanswer == "Y" || $sendanswer == "예") { $send_sms = "Y"; //알림톡 전송 $post_data = array( "id" =&gt; iconv('EUC-KR', 'UTF-8', $member_id), "name" =&gt; iconv('EUC-KR', 'UTF-8', $member_name), "hp_num" =&gt; iconv('EUC-KR', 'UTF-8', $member_phone), ); $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, "https://url");//해당 링크를 통해 카카오톡 발송 api를 사용 curl_setopt($ch, CURLOPT_POST, 1); //SSL 필수 시작 - HTTPS일때 필수 curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0); //SSL 필수 끝 curl_setopt($ch, CURLOPT_POSTFIELDS, $post_data); $output = curl_exec($ch); $curl_errno = curl_errno($ch); $curl_error = curl_error($ch); $info = curl_getinfo($ch); curl_close($ch); } else { $send_sms = "N"; } } //로그 남기기 insert_condition_log($userid, $event_idx, $event_type, $condition_value, $send_cupon, $cuponNO, $send_sms, $event_date, $msg); } } 밑에는 insert_condition_log 함수 내용(공통 파일에 넣어져있다) /* ┌──────────────────────────────────────────────────────┐ │▒ 함수명 : insert_condition_log() ▒│ │▒ 설 명 : 조건 발급 쿠폰 로그 ▒│ │▒ ▒│ │▒ 입력값 : $userid : userid, $event_idx :이벤트 idx │▒ 입력값 : $event_type : 이벤트type, $condition_value :조건 │▒ 입력값 : $send_cupon : 쿠폰발급여부, $cuponNO :쿠폰번호 │▒ 입력값 : $send_sms : sms발신여부, $event_date : 이벤트시작일 │▒ 입력값 : $message : 사용자 메시지 │▒ 리턴값 : 없음 ▒│ └──────────────────────────────────────────────────────┘*/ function insert_condition_log($userid, $event_idx, $event_type, $condition_value, $send_cupon, $cuponNO, $send_sms, $event_date, $message) { //id, event_idx(이벤트 idx)-지금은 없음, //event_type(이벤트타입)-지금은 0124_event 고정, //condition_value(조건:값) 내용-결제금액&gt;10만원:$결제금액 //send_cupon(발급여부)-Y,N couponNO, //send_sms(sms 송신여부)-지금은N, //event_date(이벤트날짜,오늘), reg_date(등록일시) condition_coupon_log에 내용 저장 //조건에 안맞아도 무조건 log에는 기입 $message = iconv("UTF-8", "EUC-KR", $message); $cupon_log_insert_sql = " INSERT INTO 테이블명(userid, event_idx, event_type, condition_value, send_cupon, couponNO, send_sms, event_date, message, reg_date)"; $cupon_log_insert_sql .= " VALUES ('$userid','$event_idx','$event_type', '$condition_value', '$send_cupon', '$cuponNO','$send_sms', '$event_date', '$message', NOW())"; $cupon_log_result = MySQLQuery($cupon_log_insert_sql); } 이렇게 소스코드로 짜여진 coupon.php 파일을 도메인에 idx값과 함께 수동으로 입력하면 해당하는 사람들에게 해당 쿠폰(수강인증 할인쿠폰)이 자동으로 발급되고 카카오 안내톡도 발송된다. EX) https://www.test.kr/coupon.php?idx=7]]></summary></entry><entry><title type="html">포스팅 테스트</title><link href="http://localhost:4000/php/first-post/" rel="alternate" type="text/html" title="포스팅 테스트" /><published>2022-02-22T00:00:00+09:00</published><updated>2022-02-22T00:00:00+09:00</updated><id>http://localhost:4000/php/first-post</id><content type="html" xml:base="http://localhost:4000/php/first-post/"><![CDATA[<p>포스팅 테스트중 🎈</p>]]></content><author><name>Ashley</name></author><category term="Php" /><category term="php" /><summary type="html"><![CDATA[포스팅 테스트중 🎈]]></summary></entry><entry><title type="html">IntelliJ IDEA 윈도우 단축키</title><link href="http://localhost:4000/java/intellij-post/" rel="alternate" type="text/html" title="IntelliJ IDEA 윈도우 단축키" /><published>2022-02-22T00:00:00+09:00</published><updated>2022-02-22T00:00:00+09:00</updated><id>http://localhost:4000/java/intellij-post</id><content type="html" xml:base="http://localhost:4000/java/intellij-post/"><![CDATA[<p>[IntelliJ IDEA 윈도우버전 단축키]</p>

<p>ctrl + alt + v : 변수 추출(Extract Variable) Optional 불러옴
ctrl + alt + m : 리팩토링 단축키(Extract Method)</p>

<p>shift + f6 : 폴더 및 파일명 변경(Rename)
class에서 ctrl + shift + t 하면 createTest 만들어짐</p>]]></content><author><name>Ashley</name></author><category term="Java" /><category term="java" /><summary type="html"><![CDATA[[IntelliJ IDEA 윈도우버전 단축키] ctrl + alt + v : 변수 추출(Extract Variable) Optional 불러옴 ctrl + alt + m : 리팩토링 단축키(Extract Method) shift + f6 : 폴더 및 파일명 변경(Rename) class에서 ctrl + shift + t 하면 createTest 만들어짐]]></summary></entry></feed>